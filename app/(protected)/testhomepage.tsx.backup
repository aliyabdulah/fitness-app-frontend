import { useRouter } from 'expo-router';
import { StatusBar } from 'expo-status-bar';
import { useContext } from 'react';
import {
  Alert,
  ScrollView,
  StyleSheet,
  Text,
  TouchableOpacity,
  View,
} from 'react-native';
import { SafeAreaView } from 'react-native-safe-area-context';
import { logout } from '../../api/auth';
import AuthContext from '../../context/AuthContext';

const Colors = {
  primary: "#FF4C29",
  background: "#082032",
  card: "#2C394B",
  textPrimary: "#FFFFFF",
  textSecondary: "#9CA3AF",
  success: "#10B981",
  warning: "#F59E0B",
};

const Spacing = {
  xs: 4,
  sm: 8,
  md: 12,
  lg: 16,
  xl: 20,
  "2xl": 24,
  "3xl": 32,
  "4xl": 40,
  "5xl": 48,
};

const BorderRadius = {
  sm: 8,
  md: 12,
  lg: 16,
  xl: 20,
};

export default function TrainXHomepage() {
  const router = useRouter();
  const { setIsAuthenticated } = useContext(AuthContext);

  const handleLogout = async () => {
    Alert.alert(
      'Logout',
      'Are you sure you want to logout?',
      [
        { text: 'Cancel', style: 'cancel' },
        { 
          text: 'Logout', 
          style: 'destructive',
          onPress: async () => {
            try {
              await logout();
              setIsAuthenticated(false);
              router.replace('/');
            } catch (error) {
              Alert.alert('Error', 'Failed to logout properly');
            }
          }
        },
      ]
    );
  };

  const handleNavigation = (page: string) => {
    Alert.alert('Navigation', `Navigate to ${page} - Feature coming soon!`);
  };

  const getCurrentDate = () => {
    const date = new Date();
    return date.toLocaleDateString('en-US', { 
      weekday: 'long', 
      year: 'numeric', 
      month: 'long', 
      day: 'numeric' 
    });
  };

  return (
    <SafeAreaView style={styles.container}>
      <StatusBar style="light" />
      
      <ScrollView 
        style={styles.scrollView}
        contentContainerStyle={styles.scrollContent}
        showsVerticalScrollIndicator={false}
      >
        {/* Header Section */}
        <View style={styles.header}>
          <View style={styles.headerContent}>
            <View style={styles.logoContainer}>
              <View style={styles.logoCircle}>
                <Text style={styles.logoText}>TrainX</Text>
              </View>
            </View>
            <TouchableOpacity 
              style={styles.logoutButton}
              onPress={handleLogout}
            >
              <Text style={styles.logoutText}>Logout</Text>
            </TouchableOpacity>
          </View>
          
          <View style={styles.greetingSection}>
            <Text style={styles.greeting}>Hello, Ahmed! üëã</Text>
            <Text style={styles.date}>{getCurrentDate()}</Text>
          </View>
        </View>

        {/* Navigation Bar */}
        <View style={styles.navigationContainer}>
          <ScrollView 
            horizontal 
            showsHorizontalScrollIndicator={false}
            contentContainerStyle={styles.navigationContent}
          >
            {[
              { id: 'home', title: 'Home', icon: 'üè†', active: true },
              { id: 'schedule', title: 'Schedule', icon: 'üìÖ', active: false },
              { id: 'train', title: 'Train', icon: 'üí™', active: false },
              { id: 'explore', title: 'Explore', icon: 'üîç', active: false },
              { id: 'analytics', title: 'Analytics', icon: 'üìä', active: false },
            ].map((item) => (
              <TouchableOpacity
                key={item.id}
                style={[
                  styles.navItem,
                  item.active && styles.navItemActive
                ]}
                onPress={() => handleNavigation(item.title)}
              >
                <Text style={styles.navIcon}>{item.icon}</Text>
                <Text style={[
                  styles.navText,
                  item.active && styles.navTextActive
                ]}>
                  {item.title}
                </Text>
              </TouchableOpacity>
            ))}
          </ScrollView>
        </View>

        {/* Fitness Tracking Cards */}
        <View style={styles.statsSection}>
          <Text style={styles.sectionTitle}>Today's Progress</Text>
          
          <View style={styles.statsGrid}>
            <View style={styles.statCard}>
              <View style={styles.statHeader}>
                <Text style={styles.statIcon}>üë£</Text>
                <Text style={styles.statTitle}>Steps</Text>
              </View>
              <Text style={styles.statValue}>8,247</Text>
              <Text style={styles.statTarget}>/ 10,000</Text>
              <View style={styles.progressBar}>
                <View style={[styles.progressFill, { width: '82%' }]} />
              </View>
            </View>

            <View style={styles.statCard}>
              <View style={styles.statHeader}>
                <Text style={styles.statIcon}>üî•</Text>
                <Text style={styles.statTitle}>Calories</Text>
              </View>
              <Text style={styles.statValue}>642</Text>
              <Text style={styles.statTarget}>kcal</Text>
              <View style={styles.progressBar}>
                <View style={[styles.progressFill, { width: '65%' }]} />
              </View>
            </View>

            <View style={styles.statCard}>
              <View style={styles.statHeader}>
                <Text style={styles.statIcon}>‚ù§Ô∏è</Text>
                <Text style={styles.statTitle}>Heart Rate</Text>
              </View>
              <Text style={styles.statValue}>72</Text>
              <Text style={styles.statTarget}>bpm</Text>
              <View style={styles.progressBar}>
                <View style={[styles.progressFill, { width: '70%', backgroundColor: Colors.success }]} />
              </View>
            </View>

            <View style={styles.statCard}>
              <View style={styles.statHeader}>
                <Text style={styles.statIcon}>‚öñÔ∏è</Text>
                <Text style={styles.statTitle}>Weight</Text>
              </View>
              <Text style={styles.statValue}>78.5</Text>
              <Text style={styles.statTarget}>kg</Text>
              <View style={styles.progressBar}>
                <View style={[styles.progressFill, { width: '85%', backgroundColor: Colors.warning }]} />
              </View>
            </View>
          </View>
        </View>

        {/* Today's Workout */}
        <View style={styles.workoutSection}>
          <Text style={styles.sectionTitle}>Today's Workout</Text>
          
          <TouchableOpacity 
            style={styles.workoutCard}
            onPress={() => handleNavigation('Upper Body Workout')}
          >
            <View style={styles.workoutHeader}>
              <View style={styles.workoutIconContainer}>
                <Text style={styles.workoutIcon}>üí™</Text>
              </View>
              <View style={styles.workoutInfo}>
                <Text style={styles.workoutTitle}>Upper Body Strength</Text>
                <Text style={styles.workoutDuration}>45 min ‚Ä¢ 2:30 PM</Text>
              </View>
              <View style={styles.workoutStatus}>
                <Text style={styles.workoutStatusText}>Start</Text>
              </View>
            </View>
            <Text style={styles.workoutDescription}>
              Focus on chest, shoulders, and arms with compound movements
            </Text>
          </TouchableOpacity>
        </View>

        {/* Personal Trainers Section */}
        <View style={styles.trainersSection}>
          <View style={styles.sectionHeader}>
            <Text style={styles.sectionTitle}>Personal Trainers</Text>
            <TouchableOpacity onPress={() => handleNavigation('All Trainers')}>
              <Text style={styles.seeAllText}>See All</Text>
            </TouchableOpacity>
          </View>
          
          <ScrollView 
            horizontal 
            showsHorizontalScrollIndicator={false}
            contentContainerStyle={styles.trainersContent}
          >
            {[
              { name: 'Sarah Johnson', specialty: 'Strength Training', rating: '4.9', image: 'üë©‚Äçü¶±' },
              { name: 'Mike Chen', specialty: 'Cardio & HIIT', rating: '4.8', image: 'üë®‚Äçü¶∞' },
              { name: 'Lisa Park', specialty: 'Yoga & Flexibility', rating: '4.9', image: 'üë©‚Äçü¶≥' },
            ].map((trainer, index) => (
              <TouchableOpacity 
                key={index}
                style={styles.trainerCard}
                onPress={() => handleNavigation(`Trainer ${trainer.name}`)}
              >
                <View style={styles.trainerImage}>
                  <Text style={styles.trainerImageText}>{trainer.image}</Text>
                </View>
                <Text style={styles.trainerName}>{trainer.name}</Text>
                <Text style={styles.trainerSpecialty}>{trainer.specialty}</Text>
                <View style={styles.trainerRating}>
                  <Text style={styles.ratingIcon}>‚≠ê</Text>
                  <Text style={styles.ratingText}>{trainer.rating}</Text>
                </View>
              </TouchableOpacity>
            ))}
          </ScrollView>
        </View>

        {/* Quick Actions */}
        <View style={styles.quickActionsSection}>
          <Text style={styles.sectionTitle}>Quick Actions</Text>
          
          <View style={styles.quickActionsGrid}>
            {[
              { title: 'Log Workout', icon: 'üìù', color: Colors.primary },
              { title: 'Find Equipment', icon: 'üèãÔ∏è', color: '#4ECDC4' },
              { title: 'Book Trainer', icon: 'üë•', color: '#45B7D1' },
              { title: 'View Progress', icon: 'üìà', color: '#96CEB4' },
            ].map((action, index) => (
              <TouchableOpacity
                key={index}
                style={[styles.quickActionCard, { borderColor: action.color }]}
                onPress={() => handleNavigation(action.title)}
              >
                <Text style={styles.quickActionIcon}>{action.icon}</Text>
                <Text style={styles.quickActionText}>{action.title}</Text>
              </TouchableOpacity>
            ))}
          </View>
        </View>

        {/* Bottom Spacing */}
        <View style={styles.bottomSpacing} />
      </ScrollView>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: Colors.background,
  },
  scrollView: {
    flex: 1,
  },
  scrollContent: {
    paddingHorizontal: Spacing.xl,
  },
  
  // Header Section
  header: {
    paddingTop: Spacing.lg,
    marginBottom: Spacing["3xl"],
  },
  headerContent: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: Spacing.xl,
  },
  logoContainer: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  logoCircle: {
    width: 40,
    height: 40,
    borderRadius: 20,
    borderWidth: 2,
    borderColor: Colors.primary,
    justifyContent: 'center',
    alignItems: 'center',
  },
  logoText: {
    fontSize: 14,
    fontWeight: 'bold',
    color: Colors.primary,
  },
  logoutButton: {
    paddingHorizontal: Spacing.lg,
    paddingVertical: Spacing.sm,
    backgroundColor: Colors.card,
    borderRadius: BorderRadius.sm,
  },
  logoutText: {
    color: Colors.textPrimary,
    fontSize: 14,
    fontWeight: '600',
  },
  greetingSection: {
    marginBottom: Spacing.lg,
  },
  greeting: {
    fontSize: 28,
    fontWeight: 'bold',
    color: Colors.textPrimary,
    marginBottom: Spacing.xs,
  },
  date: {
    fontSize: 16,
    color: Colors.textSecondary,
  },

  // Navigation Section
  navigationContainer: {
    marginBottom: Spacing["3xl"],
  },
  navigationContent: {
    paddingRight: Spacing.xl,
  },
  navItem: {
    backgroundColor: Colors.card,
    paddingHorizontal: Spacing.lg,
    paddingVertical: Spacing.md,
    borderRadius: BorderRadius.lg,
    marginRight: Spacing.md,
    alignItems: 'center',
    minWidth: 80,
  },
  navItemActive: {
    backgroundColor: Colors.primary,
  },
  navIcon: {
    fontSize: 20,
    marginBottom: Spacing.xs,
  },
  navText: {
    fontSize: 12,
    color: Colors.textSecondary,
    fontWeight: '600',
  },
  navTextActive: {
    color: Colors.textPrimary,
  },

  // Stats Section
  statsSection: {
    marginBottom: Spacing["3xl"],
  },
  sectionTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    color: Colors.textPrimary,
    marginBottom: Spacing.lg,
  },
  statsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    gap: Spacing.md,
  },
  statCard: {
    backgroundColor: Colors.card,
    borderRadius: BorderRadius.lg,
    padding: Spacing.lg,
    width: '48%',
  },
  statHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: Spacing.sm,
  },
  statIcon: {
    fontSize: 16,
    marginRight: Spacing.sm,
  },
  statTitle: {
    fontSize: 14,
    color: Colors.textSecondary,
    fontWeight: '600',
  },
  statValue: {
    fontSize: 24,
    fontWeight: 'bold',
    color: Colors.textPrimary,
  },
  statTarget: {
    fontSize: 12,
    color: Colors.textSecondary,
    marginBottom: Spacing.sm,
  },
  progressBar: {
    height: 4,
    backgroundColor: Colors.background,
    borderRadius: 2,
    overflow: 'hidden',
  },
  progressFill: {
    height: '100%',
    backgroundColor: Colors.primary,
  },

  // Workout Section
  workoutSection: {
    marginBottom: Spacing["3xl"],
  },
  workoutCard: {
    backgroundColor: Colors.card,
    borderRadius: BorderRadius.lg,
    padding: Spacing.lg,
  },
  workoutHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: Spacing.md,
  },
  workoutIconContainer: {
    width: 50,
    height: 50,
    borderRadius: 25,
    backgroundColor: Colors.primary,
    justifyContent: 'center',
    alignItems: 'center',
    marginRight: Spacing.lg,
  },
  workoutIcon: {
    fontSize: 24,
  },
  workoutInfo: {
    flex: 1,
  },
  workoutTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: Colors.textPrimary,
    marginBottom: Spacing.xs,
  },
  workoutDuration: {
    fontSize: 14,
    color: Colors.textSecondary,
  },
  workoutStatus: {
    backgroundColor: Colors.primary,
    paddingHorizontal: Spacing.lg,
    paddingVertical: Spacing.sm,
    borderRadius: BorderRadius.sm,
  },
  workoutStatusText: {
    color: Colors.textPrimary,
    fontSize: 14,
    fontWeight: '600',
  },
  workoutDescription: {
    fontSize: 14,
    color: Colors.textSecondary,
    lineHeight: 20,
  },

  // Trainers Section
  trainersSection: {
    marginBottom: Spacing["3xl"],
  },
  sectionHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: Spacing.lg,
  },
  seeAllText: {
    fontSize: 14,
    color: Colors.primary,
    fontWeight: '600',
  },
  trainersContent: {
    paddingRight: Spacing.xl,
  },
  trainerCard: {
    backgroundColor: Colors.card,
    borderRadius: BorderRadius.lg,
    padding: Spacing.lg,
    alignItems: 'center',
    marginRight: Spacing.md,
    width: 140,
  },
  trainerImage: {
    width: 60,
    height: 60,
    borderRadius: 30,
    backgroundColor: Colors.primary,
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: Spacing.md,
  },
  trainerImageText: {
    fontSize: 30,
  },
  trainerName: {
    fontSize: 16,
    fontWeight: 'bold',
    color: Colors.textPrimary,
    textAlign: 'center',
    marginBottom: Spacing.xs,
  },
  trainerSpecialty: {
    fontSize: 12,
    color: Colors.textSecondary,
    textAlign: 'center',
    marginBottom: Spacing.sm,
  },
  trainerRating: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  ratingIcon: {
    fontSize: 12,
    marginRight: Spacing.xs,
  },
  ratingText: {
    fontSize: 12,
    color: Colors.textPrimary,
    fontWeight: '600',
  },

  // Quick Actions Section
  quickActionsSection: {
    marginBottom: Spacing["3xl"],
  },
  quickActionsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    gap: Spacing.md,
  },
  quickActionCard: {
    backgroundColor: Colors.card,
    borderRadius: BorderRadius.lg,
    padding: Spacing.lg,
    alignItems: 'center',
    width: '48%',
    borderWidth: 1,
  },
  quickActionIcon: {
    fontSize: 32,
    marginBottom: Spacing.sm,
  },
  quickActionText: {
    fontSize: 14,
    color: Colors.textPrimary,
    fontWeight: '600',
    textAlign: 'center',
  },

  bottomSpacing: {
    height: Spacing["5xl"],
  },
}); 